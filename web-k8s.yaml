apiVersion: v1
kind: Service
metadata:
  name: umi-web
spec:
  selector:
    app: umi-web
  ports:
    - port: 80
      targetPort: 80
      nodePort: 31000
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: umi-web
  labels:
    app: umi-web
spec:
  replicas: 1
  template:
    metadata:
      name: umi-web
      labels:
        app: umi-web
    spec:
      containers:
        - name: umi-web
          image: zhqn.com:5000/umi-web:1.0.0
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /etc/nginx
              name: ngnix-conf
      restartPolicy: Always
      volumes:
        - name: ngnix-conf
          configMap:
            name: ngnix-conf
  selector:
    matchLabels:
      app: umi-web
---
apiVersion: v1
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        server {
            listen       80;
            listen  [::]:80;
            server_name  localhost;

            #access_log  /var/log/nginx/host.access.log  main;

            location / {
                    root   /usr/share/nginx/html;
                    index  index.html index.htm;
                    try_files $uri $uri/ /index.html;
            }
            location /api/ {
                    proxy_pass      http://umi-backend:8282/;
                    proxy_set_header X-Real-IP $remote_addr;
            }

            #error_page  404              /404.html;

            # redirect server error pages to the static page /50x.html
            #
            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                    root   /usr/share/nginx/html;
            }

            # proxy the PHP scripts to Apache listening on 127.0.0.1:80
            #
            #location ~ \.php$ {
            #    proxy_pass   http://127.0.0.1;
            #}

            # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
            #
            #location ~ \.php$ {
            #    root           html;
            #    fastcgi_pass   127.0.0.1:9000;
            #    fastcgi_index  index.php;
            #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            #    include        fastcgi_params;
            #}

            # deny access to .htaccess files, if Apache's document root
            # concurs with nginx's one
            #
            #location ~ /\.ht {
            #    deny  all;
            #}
        }

    }
kind: ConfigMap
metadata:
  name: ngnix-conf

